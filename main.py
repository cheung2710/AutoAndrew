## TODO: add zero-width spaces in front of messages to prevent interference with other bots (https://github.com/meew0/discord-bot-best-practices)
## add database with customizations (https://www.youtube.com/watch?v=SPTfmiYiuok)
## make help() more helpful (DM)
import discord
import os
import requests
import json
import random
import io
import aiohttp
from keep_alive import keep_alive


client = discord.Client()

bad_words = ['fuck', 'shit', 'bitch']
greetings = ['hello', 'hi', 'greetings', 'hey', 'yo']

async def check_bad_words(message):
  """Sends a message if anyone says a word in the bad_words[] list."""
  for word in bad_words:
      if word in message.content:
        author = str(message.author)
        author = author[:len(author) - 5]
        await message.channel.send(author + ", watch your fucking language!")


async def get_inspirobot(message):
  """Sends an image generated by Inspirobot.
  Function body copied from Discord API docs: https://discordpy.readthedocs.io/en/stable/faq.html#how-do-i-upload-an-image"""
  my_url = requests.get('https://inspirobot.me/api?generate=true').text
  async with aiohttp.ClientSession() as session:
    async with session.get(my_url) as resp:
      if resp.status != 200:
          return await message.channel.send('Sorry, I couldn\'t download the file...')
      data = io.BytesIO(await resp.read())
      await message.channel.send(file = discord.File(data, 'inspirobot_image.png'))


async def get_cat(message):
  """Sends an image from TheCatApi."""
  response = requests.get('https://api.thecatapi.com/v1/images/search')
  json_data = json.loads(response.text)
  my_url = json_data[0]['url']
  async with aiohttp.ClientSession() as session:
    async with session.get(my_url) as resp:
      if resp.status != 200:
          return await message.channel.send('Sorry, I couldn\'t download the file...')
      data = io.BytesIO(await resp.read())
      await message.channel.send(file = discord.File(data, 'cat_image.png'))


def get_help():
  return "try these commands:\na!help \na!hello \na!quote \na!say \na!shout \na!inspire \na!cat \na!roast \nMore features coming soon!"


def get_quote():
  """Returns an inspirational quote from zenquotes.io."""
  response = requests.get('https://zenquotes.io/api/random')
  json_data = json.loads(response.text)
  quote = json_data[0]['q'] + "\n--" + json_data[0]['a']
  return quote


def say_hello(message):
    author = str(message.author)
    author = author[:len(author) - 5]
    greeting = random.choice(greetings).capitalize()
    return greeting + ', ' + author + '!'


def roast(message):
  """Returns an insult with a name attached from insult.mattbas.org."""
  insult = requests.get('https://insult.mattbas.org/api/insult').text
  if message == '': 
    return insult + "."

  name = ''
  for char in message:
    if char != ' ':
      name += char
  ## "a!roast me" will roast the author instead of "Me"
  if name == 'me':
    name = str(message.author)[:len(name) - 5]

  if len(name) > 0:
    name = name[0].upper() + name[1:]
  insult = name + ", you " + insult[4:]
  return insult + "."


def say(message, s):
  return message.channel.send(s)


def shout(message, s):
  return message.channel.send(s.upper())


@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))
    await client.change_presence(status = discord.Status.online, activity = discord.Game("a!help"))


@client.event
async def on_message(message):
  """All of the bot's responses to message events."""
  ## ignore all other bots' messages
  if message.author.bot:
    return

  ## always check for bad words
  await check_bad_words(message)

  ## check for command prefix
  if message.content.startswith('a!'):

    if message.content.startswith('a!cat'):
      await get_cat(message)

    elif message.content.startswith('a!hello'):
      await message.channel.send(say_hello(message))

    elif message.content.startswith('a!help'):
      await message.channel.send(get_help())

    elif message.content.startswith('a!inspire'):
      await get_inspirobot(message)

    elif message.content.startswith('a!quote'):
      await message.channel.send(get_quote())

    elif message.content.startswith('a!roast'):
      if len(message.content) > 7:
        insult = roast(message.content[7:])
      else:
        insult = roast('')
      await message.channel.send(insult)

    elif message.content.startswith('a!say'):
      if len(message.content) > 5:
        await say(message, message.content[5:])

    elif message.content.startswith('a!shout'):
      if len(message.content) > 7:
        await shout(message, message.content[7:])


keep_alive()
client.run(os.environ['DISCORD_BOT_KEY'])